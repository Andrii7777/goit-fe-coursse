@charset "UTF-8";
/*
 * Все паршалы импортировать в этот файл
 */
.page-heder__a, .one-section__title {
  display: inline-block;
  padding: 0;
  margin: 0; }

.page-heder, .one-section {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0; }

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder; }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none; }

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible; }

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none; }

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline; }

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto; }

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block; }

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item; }

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none; }

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none; }

/* Generated by Fontie <http://fontie.pixelsvsbytes.com> */
@font-face {
  font-family: 'Montserrat 700';
  src: url("../fonts/Bold.woff2") format("woff2"), url("../fonts/Montserrat Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat 400';
  src: url("../fonts/Montserrat Regular.woff2") format("woff2"), url("../fonts/Montserrat Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat 400  italic';
  src: url("../fonts/Montserrat Italic.woff2") format("woff2"), url("../fonts/Montserrat Italic.woff") format("woff");
  font-weight: 400;
  font-style: italic;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat ExtraBold';
  src: url("../fonts/Montserrat ExtraBold.woff2") format("woff2"), url("../fonts/Montserrat ExtraBold.woff") format("woff");
  font-weight: 800;
  font-style: normal;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat';
  src: url("../fonts/Montserrat Medium Italic.woff2") format("woff2"), url("../fonts/Montserrat Medium Italic.woff") format("woff");
  font-weight: 500;
  font-style: italic;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat Medium';
  src: url("../fonts/Montserrat Medium.woff2") format("woff2"), url("../fonts/Montserrat Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

@font-face {
  font-family: 'Montserrat SemiBold';
  src: url("../fonts/Montserrat SemiBold.woff2") format("woff2"), url("../fonts/Montserrat SemiBold.woff") format("woff");
  font-weight: 600;
  font-style: normal;
  font-stretch: normal;
  unicode-range: U+0020-2044; }

html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

body {
  font-family: sans-serif;
  color: #18191d;
  font-size: 14px;
  line-height: 1.5; }

@media screen and (max-width: 1919px) {
  .container {
    max-width: 340px;
    padding: 0 18px;
    margin: 0 auto; } }

@media screen and (min-width: 1920px) {
  .container {
    max-width: 1826px;
    margin: 0 auto; } }

.link {
  display: block;
  text-decoration: none; }

.list {
  margin: 0;
  padding: 0;
  list-style: none; }

.visually-hidden:not(:focus):not(:active),
input[type="checkbox"].visually-hidden,
input[type="radio"].visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden; }

.page-heder {
  background-image: url("../images/Forabilis Site Mobil 7171-min.png");
  position: relative;
  width: 100%;
  height: 560px;
  margin: 0 auto; }
  .page-heder::before {
    position: absolute;
    content: '';
    top: 501px;
    left: 0px;
    background-image: url("../images/77777777.png");
    width: 135px;
    height: 60px;
    background-position: right bottom;
    background-repeat: no-repeat;
    z-index: 1; }
  .page-heder__div {
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 9px;
    justify-content: space-between; }
  .page-heder__headline {
    display: inline-block;
    width: 280px;
    font-weight: 400;
    font-style: normal;
    font-family: "Impact";
    text-transform: uppercase;
    color: #ffffff;
    font-size: 33px;
    line-height: 1.2;
    margin: 0;
    margin-bottom: 13px; }
  .page-heder__div {
    margin-bottom: 25px; }
  .page-heder__text {
    display: inline-block;
    color: #ffffff;
    line-height: 1.3;
    font-weight: 400;
    font-style: normal;
    font-size: 20px;
    width: 280px;
    margin: 0px; }
  .page-heder__a {
    background-color: transparent;
    cursor: pointer;
    list-style: none; }
  .page-heder__span {
    display: block;
    width: 50px;
    height: 4px;
    background-color: #18191d;
    margin-bottom: 14px; }
  .page-heder__burger {
    display: block;
    width: 22px;
    height: 5px;
    background-color: #ffffff; }
  .page-heder__burger:not(:last-child) {
    margin-bottom: 3px; }

.site-navigation {
  display: none; }

@media screen and (min-width: 1920px) {
  .page-heder {
    background-image: url("../images/88888-min.png");
    width: 100%;
    height: 1081px; }
    .page-heder::before {
      top: 928px;
      left: 250px;
      background-image: url("../images/772.png");
      width: 421px;
      height: 153px; }
    .page-heder__burger {
      display: none; }
    .page-heder__headline {
      width: 560px;
      font-weight: 400;
      font-style: normal;
      font-size: 75px;
      margin-left: 313px;
      margin-bottom: 42px; }
    .page-heder__text {
      color: #ffffff;
      line-height: 1.3;
      font-weight: 400;
      font-style: normal;
      font-size: 32px;
      width: 402px;
      margin-left: 313px; }
    .page-heder__span {
      width: 120px;
      height: 6px;
      margin-bottom: 42px;
      margin-left: 313px; }
    .page-heder__div {
      padding-top: 28px;
      margin-bottom: 110px; }
    .page-heder__wrapper {
      display: flex;
      justify-content: center;
      align-items: center; }
  .site-navigation {
    display: flex;
    justify-content: center;
    align-items: center; }
    .site-navigation__item {
      margin-right: 50px; }
    .site-navigation__a {
      position: relative;
      padding-bottom: 48px; }
    .site-navigation__a::after {
      position: absolute;
      width: 135px;
      height: 6px;
      display: inline-block;
      content: '';
      bottom: 0px;
      left: 50%;
      transform: translateX(-50%); }
    .site-navigation__a:hover::after {
      background-color: #18191d; }
    .site-navigation__item:last-child {
      margin-right: 0px; }
    .site-navigation__a {
      color: #ffffff;
      font-weight: 600;
      text-transform: uppercase;
      line-height: 1.3;
      font-size: 22px; }
    .site-navigation__a:hover {
      color: #413e34; } }

.one-section {
  background-color: #dadada;
  width: 100%;
  height: auto;
  margin: 0 auto; }
  .one-section__title {
    font-weight: bold;
    font-weight: 400;
    font-style: normal;
    font-family: "Impact";
    text-transform: uppercase;
    margin-bottom: 14px;
    font-size: 33px;
    line-height: 1.1;
    width: 115px; }
  .one-section__picture {
    margin: 0px;
    position: relative; }
    .one-section__picture::before {
      position: absolute;
      content: '';
      top: 74.9px;
      left: 20px;
      background-image: url("../images/Vector Smart Objec000t.png");
      width: 13px;
      height: 13px;
      background-position: right bottom;
      background-repeat: no-repeat;
      z-index: 1; }
  .one-section__div-wraper {
    padding-top: 18px; }
  .one-section__span {
    display: block;
    width: 50px;
    height: 4px;
    background-color: #24ad4a; }
  .one-section__div-wraper {
    display: flex;
    justify-content: space-between;
    display: flex;
    align-items: center;
    margin-bottom: 16px; }
  .one-section__text {
    font-weight: 600;
    text-align: start;
    font-size: 20px;
    text-transform: uppercase;
    margin: 0px; }
  .one-section__text-1 {
    line-height: 1.6;
    margin: 0px; }
  .one-section__div-1 {
    margin: 0px;
    font-size: 15px;
    font-weight: 400;
    font-style: normal;
    line-height: 1.8;
    text-align: start;
    position: relative; }
    .one-section__div-1::before {
      display: inline-block;
      content: '';
      position: absolute;
      border-top: 2px dotted #413e34;
      width: 100%;
      top: 47px;
      left: 0px;
      z-index: 1; }
    .one-section__div-1::after {
      display: inline-block;
      content: '';
      position: absolute;
      border-top: 2px dotted #413e34;
      width: 100%;
      top: 119px;
      left: 0px;
      z-index: 1; }
  .one-section__list {
    display: flex;
    justify-content: space-between;
    display: flex;
    flex-wrap: wrap;
    padding: 0px;
    margin: 0px;
    margin-bottom: 14px; }
  .one-section__wraper {
    display: flex;
    justify-content: space-between;
    display: flex;
    align-items: center;
    padding-bottom: 14px; }
  .one-section__button {
    background-color: #24ad4a;
    border: 0px;
    color: #ffffff;
    font-size: 17px;
    text-transform: uppercase;
    font-weight: 400;
    font-style: normal;
    width: 106px;
    height: 34px;
    line-height: 1.1; }
  .one-section__name {
    margin: 0px;
    font-size: 15px;
    font-weight: 400;
    font-style: normal;
    line-height: 1.1; }
  .one-section__item {
    display: flex;
    align-items: center;
    text-align: center;
    width: 146px;
    background-color: #ffffff;
    padding-left: 35px;
    padding-right: 35px;
    padding-bottom: 25px;
    min-height: 180px;
    padding: 8px 8px;
    transition: all 0.2s linear; }
    .one-section__item:not(:nth-last-child(-n + 2)) {
      margin-bottom: 12px; }
    .one-section__item:hover {
      background-color: #24ad4a;
      color: #ffffff; }

@media screen and (max-width: 1919px) {
  .one-section__column {
    display: none; } }

@media screen and (min-width: 1920px) {
  .one-section {
    position: relative; }
    .one-section__wraper {
      position: absolute;
      top: 859px;
      left: 635px;
      width: 420px;
      padding: 0px; }
    .one-section__p {
      display: none;
      font-size: 22px;
      font-weight: 600;
      text-transform: uppercase;
      position: absolute;
      display: inline-block;
      top: 10px;
      right: 75px;
      margin: 0px; }
    .one-section__li {
      position: relative; }
    .one-section__column {
      position: absolute;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 0px;
      margin: 0px;
      top: 50%;
      right: 0px;
      transform: translateY(-50%); }
    .one-section__li {
      display: inline-block;
      margin-bottom: 34px;
      width: 50px;
      height: 50px;
      background-color: #ffffff;
      padding: 9px 9px; }
      .one-section__li:hover {
        background-color: #24ad4a; }
    .one-section__li:last-child {
      margin-bottom: 0px; }
    .one-section__svg {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0 auto; }
    .one-section__button {
      width: 140px;
      height: 50px;
      font-size: 22px; }
    .one-section__text {
      font-size: 32px; }
    .one-section__text-1 {
      line-height: 1.8;
      font-size: 22px; }
    .one-section__br {
      display: none; }
    .one-section__div-1::before {
      border-top: 4px dotted #413e34;
      top: 38px; }
    .one-section__div-1::after {
      border-top: 4px dotted #413e34;
      top: 115px; }
    .one-section__picture {
      display: none; }
    .one-section__div-2 {
      width: 1460px;
      margin: 0 auto; }
    .one-section__div-3 {
      position: relative;
      margin-left: 130px;
      margin-right: 56px;
      padding-bottom: 180px; }
      .one-section__div-3::after {
        display: inline-block;
        content: '';
        position: absolute;
        border-top: 3px dotted #413e34;
        width: 123px;
        top: 617px;
        left: 1300px;
        z-index: 5; }
    .one-section__list {
      position: relative;
      width: 590px;
      height: 542px;
      margin: 0; }
      .one-section__list::before {
        position: absolute;
        content: '';
        top: -121px;
        left: 628px;
        background-image: url("../images/VectorSmartObjec-2-min.png");
        width: 645px;
        height: 374px;
        background-position: right bottom;
        background-repeat: no-repeat;
        z-index: 1; }
      .one-section__list::after {
        position: absolute;
        content: '';
        top: 184px;
        left: 711px;
        background-image: url("/build/images/Vector Smart Objec88t.png");
        width: 52px;
        height: 52px;
        background-position: right bottom;
        background-repeat: no-repeat;
        z-index: 2; }
    .one-section__div-wraper {
      margin: 0px; }
    .one-section__div-wraper {
      padding-top: 190px; }
    .one-section__name {
      font-size: 22px; }
    .one-section__span {
      width: 116px;
      height: 8px;
      margin-bottom: 46px; }
    .one-section__title {
      width: 100%;
      font-size: 75px;
      margin-bottom: 40px; }
    .one-section__item {
      width: 276px;
      min-height: 254px;
      margin-right: 0px;
      padding: 15px 15px; }
      .one-section__item:not(:nth-last-child(-n + 2)) {
        margin-bottom: 33px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
